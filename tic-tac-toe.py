# Игра "Крестики-нолики" с двумя режимами игры
import random


# функция показывает правила игры и позволяет выбрать режим игры
def greeting():
    print("""-----------------------
Игра "Крестики-нолики"
-----------------------
Правила игры:
Игроки по очереди ставят крестики и нолики в свободные поля.
Побеждает тот, кто сможет поставить 3 крестика или нолика
в одну линию по горизонтали, вертикали или диагонали.
-----------------------
Формат ввода координат:
xy или x y, где x - номер строки, y - номер столбца
-----------------------
Режимы игры:
1) Человек против человека
2) Человек против ИИ, делающего случайные ходы
-----------------------""")
    while True:
        game_mode = input("Введите 1 или 2, чтобы выбрать режим игры: ")
        game_mode = game_mode.replace(' ', '')  # Убираем пробелы из пользовательского ввода
        if not game_mode.isdigit():  # Проверка, что получили число и можно использовать int
            print("Нужно ввести цифру!")
            continue
        game_mode = int(game_mode)
        if game_mode == 1:
            print('Вы выбрали режим "Человек против человека"!')
            return False
        elif game_mode == 2:
            print('Вы выбрали режим "Человек против ИИ"!')
            return True
        else:
            print("Нужно ввести 1 или 2!")


# функция рисует игровое поле
def draw_grid():
    print()
    print("   | 1 | 2 | 3 |")
    print("----------------")
    for row_number, row_content in enumerate(grid):
        print(f" {row_number+1} | {' | '.join(row_content)} |")
        print("----------------")
    print()


# функция проверяет вводимые координаты на наличие ошибок. Если все хорошо, то возвращает x и y
def ask_cell():
    while True:
        coordinates = input("Выберите клетку для вашего хода: ")
        coordinates = coordinates.replace(' ', '')  # избавляемся от пробелов в координатах

        if len(coordinates) == 2:  # проверка результата на соответствие формату xy
            x, y = coordinates[0], coordinates[1]
        else:
            print("Неверный формат координат!")
            continue

        if not (x.isdigit()) or not (y.isdigit()):  # проверка, что пользователь ввел числа
            print("Нужно ввести числовые значения координат!")
            continue

        x, y = int(x) - 1, int(y) - 1  # вычитаем по 1, т.к. индексы в массиве идут с 0

        if 0 > x or x > 2 or 0 > y or y > 2:  # проверка, что вводимые координаты в допустимом диапазоне
            print("Координаты вне диапазона (1, 2, 3)!")
            continue

        if grid[x][y] != " ":  # проверка, что выбранная клетка не занята
            print("Клетка занята!")
            continue

        return x, y


# существует всего 8 вариантов победных линий. Проверяем по координатам наличие совпадений.
def check_win():
    # Координаты возможных выигрышных линий. 3 по горизонтали, 3 по вертикали и 2 по диагонали
    win_coordinates = (((0, 0), (0, 1), (0, 2)), ((1, 0), (1, 1), (1, 2)), ((2, 0), (2, 1), (2, 2)),
                       ((0, 0), (1, 0), (2, 0)), ((0, 1), (1, 1), (2, 1)), ((0, 2), (1, 2), (2, 2)),
                       ((0, 0), (1, 1), (2, 2)), ((0, 2), (1, 1), (2, 0)))
    for coordinate in win_coordinates:
        result = []  # В эту переменную записываем значения на выигрышных линиях
        for i in coordinate:
            result.append(grid[i[0]][i[1]])

        if result == ["X", "X", "X"]:  # сравниваем результат с победной комбинацией для "X"
            print("Выиграл крестик!")
            return True

        if result == ["0", "0", "0"]:  # сравниваем результат с победной комбинацией для "0"
            print("Выиграл нолик!")
            return True
    return False


grid = [[" "] * 3 for i in range(3)]  # тут хранятся результаты ходов
turn = 0  # это номер хода, по нему определяем кто ходит
AI = greeting()  # False - играет человек с человеком. True - человек с ИИ
if AI:  # если играем с ИИ, то создаем список допустимых ходов для него
    computer_choice = [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]
draw_grid()

while True:
    turn += 1
    if turn % 2 == 1:  # первым ходит крестик. Все нечетные ходы за крестиком
        print("Ходит крестик!")
        x_, y_ = ask_cell()
        grid[x_][y_] = "X"
    else:
        print("Ходит нолик!")
        if AI:  # если играем с ИИ, то он делает случайный ход из списка возможных
            computer_choice.remove((x_, y_))  # удаляем из списка координаты хода человека
            x_, y_ = random.choice(computer_choice)  # ИИ делает случайных ход
            computer_choice.remove((x_, y_))  # удаляем из списка координаты хода ИИ
            print(f"ИИ выбирает клетку с координатами {x_+1}{y_+1}")
        else:
            x_, y_ = ask_cell()
        grid[x_][y_] = "0"

    draw_grid()

    # нужно минимум 5 ходов для победы одного из игроков. Делаем проверку, чтобы лишний раз ф-ию не вызывать
    if turn >= 5:
        if check_win():
            break
        if turn == 9:  # если нет победителя после 9 ходов, то это ничья
            print("Ничья!")
            break
